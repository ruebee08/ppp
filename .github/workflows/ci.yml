name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build frontend
      run: docker build -t frontend-test ./frontend

    - name: Build backend
      run: docker build -t backend-test ./backend

    - name: Lint Dockerfiles
      uses: hadolint/hadolint-action@v2.0.0
      with:
        dockerfile: ./frontend/Dockerfile

    - name: Spin up services (docker-compose)
      run: docker compose up -d --build

    - name: Wait for services
      run: sleep 15

    - name: Check containers running
      run: docker ps -a

    # --- SONARQUBE SCAN ---
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v5.0.0
      with:
        args: >
          -Dsonar.projectKey=ruebee08_ppp
          -Dsonar.organization=ruebee08
          -Dsonar.sources=.
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    # --- TRIVY SCAN ---
    - name: Scan backend image with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: backend-test
        format: table
        exit-code: 0
        ignore-unfixed: true

    - name: Scan frontend image with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: frontend-test
        format: table
        exit-code: 0
        ignore-unfixed: true

    # Optional: Run backend tests
    # - name: Run backend tests
    #   run: docker exec <backend-container-name> npm test
